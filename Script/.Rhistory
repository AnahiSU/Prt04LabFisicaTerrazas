# Nombre:
# Cod Syss:
# Grupo:
# Carrera:
# Fecha:
#
# Objetivo: "Graficos y Ecuaciones"
#
# ##### Parabola #######
ne <- 100
t = seq(0.5, 10, length.out = ne)
x <- runif(1, 3,5)*t^2 + rnorm(ne, 0, 2)
plot(x,t)
t = seq(0.5, 10, length.out = ne)  + rnorm(ne, 0, 2)
x <- runif(1, 3,5)*t^2
plot(x,t)
t = seq(0.5, 10, length.out = ne)
x <- runif(1, 3,5)*t^2 + rnorm(ne, 0, 2)
plot(x,t)
x <- runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2)
plot(x,t)
plot(x = t,y = x)
t = seq(-0.5, 10, length.out = ne)
x <- runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2)
plot(x = t,y = x)
t = seq(-5, 10, length.out = ne)
x <- runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2)
plot(x = t,y = x)
# cambio de variable
z <- t^2
plot(x = z, y = x)
# Nombre:
# Cod Syss:
# Grupo:
# Carrera:
# Fecha:
#
# Objetivo: "Graficos y Ecuaciones"
#
# ##### Parabola #######
ne <- 100
t = seq(-5, 10, length.out = ne)
x <- runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2)
plot(x = t,y = x)
t = seq(-1, 10, length.out = ne)
x <- runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2)
plot(x = t,y = x)
# ##### Parabola #######
library(tidyverse)
PosTime <-ttibble(
t= seq(-1, 10, length.out = ne) ,
x = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2)
)
PosTime <-tibble(
t= seq(-1, 10, length.out = ne) ,
x = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2)
)
# posicion vs tiempo
PosTime <-tibble(
t= seq(-1, 10, length.out = ne) ,
x1 = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2),
x2 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x3 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
)
View(PosTime)
plot(PosTime)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,0.1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
)
plot(x = presVol$V1, y = presVol$P1)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
)
plot(x = presVol$V1, y = presVol$P1)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,0.5, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
)
plot(x = presVol$V1, y = presVol$P1)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,0.1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
)
plot(x = presVol$V1, y = presVol$P1)
plot(x = presVol$V1, y = presVol$P2)
plot(x = presVol$V1, y = presVol$P3)
plot(x = presVol$V1, y = presVol$P5)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
)
plot(x = presVol$V1, y = presVol$P5)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.1)),
)
plot(x = presVol$V1, y = presVol$P5)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
)
plot(x = presVol$V1, y = presVol$P5)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + 2*rnorm(ne, 0, 0.05)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
)
plot(x = presVol$V1, y = presVol$P5)
plot(x = presVol$V1, y = presVol$P1)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
)
plot(x = presVol$V1, y = presVol$P1)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.006)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
)
plot(x = presVol$V1, y = presVol$P1)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.009)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
)
plot(x = presVol$V1, y = presVol$P1)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.01)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
)
plot(x = presVol$V1, y = presVol$P1)
plot(x = presVol$V1, y = presVol$P2)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.05)),
)
plot(x = presVol$V1, y = presVol$P2)
plot(x = presVol$V1, y = presVol$P1)
# presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
)
plot(x = presVol$V1, y = presVol$P1)
plot(x = presVol$V1, y = presVol$P3)
# posicion vs tiempo
PosTime2 <-tibble(
t= seq(3, 10, length.out = ne) ,
x1 = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2),
x2 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x3 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
)
plot(x = PosTime2$t, y = PosTime2$x1)
plot(x = losg(PosTime2$t), y = PosTime2$x1)
plot(x = log(PosTime2$t), y = PosTime2$x1)
plot(x = log(PosTime2$t), y = log(PosTime2$x1))
abline(x = log(PosTime2$t), y = log(PosTime2$x2)))
abline(x = log(PosTime2$t), y = log(PosTime2$x2))
lines(x = log(PosTime2$t), y = log(PosTime2$x2))
plot(x = log(PosTime2$t), y = log(PosTime2$x2))
points(x = log(PosTime2$t), y = log(PosTime2$x2))
plot(x = log(PosTime2$t), y = log(PosTime2$x2))
points(x = log(PosTime2$t), y = log(PosTime2$x1),pch=12)
write_csv2(x = PosTime, path = "chp4/PosTime.csv", col_names = F)
write_csv2(x = PosTime, path = "chp4/Data/PosTime.csv", col_names = F)
write_csv2(x = PosTime, path = "chp4/Data/PosTime.csv")
write_csv2(x = PosTime, path = "chp4/Data/PosTime.csv", col_names = F)
write_csv2(x = PosTime, path = "chp4/Data/PosTime.csv")
write_csv2(x = presVol, path = "chp4/Data/PresVol.csv")
# utilinzado metodo de algoritmos trabajar
PosTime2 <-tibble(
t= seq(3, 10, length.out = ne) ,
x1 = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2),
x2 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x3 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x4 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x5 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2)
)
# Posicion vs tiempo
PosTime <-tibble(
t= seq(-1, 10, length.out = ne) ,
x1 = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2),
x2 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x3 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x4 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x5 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
)
write_csv2(x = PosTime, path = "chp4/Data/PosTime.csv")
# Presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
)
write_csv2(x = presVol, path = "chp4/Data/PresVol.csv")
write_csv2(x = PosTime2, path = "chp4/Data/PosTime2.csv")
# Posicion vs tiempo
PosTime <-tibble(
t= seq(-1, 10, length.out = ne) ,
x1 = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2),
x2 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x3 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x4 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x5 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
)
write_csv2(x = PosTime, path = "Data/B5/PosTime.csv")
# ##### Parabola #######
library(tidyverse)
ne <- 100
# Posicion vs tiempo
PosTime <-tibble(
t= seq(-1, 10, length.out = ne) ,
x1 = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2),
x2 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x3 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x4 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x5 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
)
write_csv2(x = PosTime, path = "Data/B5/PosTime.csv")
# Presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
)
write_csv2(x = presVol, path = "Data/B5/PresVol.csv")
# utilinzado metodo de algoritmos trabajar
PosTime2 <-tibble(
t= seq(3, 10, length.out = ne) ,
x1 = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2),
x2 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x3 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x4 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x5 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2)
)
write_csv2(x = PosTime2, path = "Data/B5/PosTime2.csv")
# Posicion vs tiempo
PosTime <-tibble(
t= seq(-1, 10, length.out = ne) ,
x1 = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2),
x2 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x3 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x4 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x5 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
)
write_csv2(x = PosTime, path = "Data/B6/PosTime.csv")
# Presion vs volumen
# P = a/V
presVol <- tibble(
V1= seq(2,1, length.out = ne),
P1 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P2 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P3 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P4 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
P5 = runif(1,0.5,3)/(V1 + rnorm(ne, 0, 0.02)),
)
write_csv2(x = presVol, path = "Data/B6/PresVol.csv")
# utilinzado metodo de algoritmos trabajar
PosTime2 <-tibble(
t= seq(3, 10, length.out = ne) ,
x1 = runif(1, 3,5)*t^2 + 2*rnorm(ne, 0, 2),
x2 = runif(1, 7,10)*t^2 + 3*rnorm(ne, 0, 2),
x3 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x4 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2),
x5 = runif(1, 3,15)*t^2 + 4*rnorm(ne, 0, 2)
)
write_csv2(x = PosTime2, path = "Data/B6/PosTime2.csv")
source('~/Documents/UMSS/Clases/2022/Laboratorio/GeneralWork/HWlabs1Chp45/Script/MainChp4.R')
PosTime <- read.csv2("C:/Users/usser/Escritorio/Leonel/Asignaturas/FISICA_GRAL_LAB/Informes/Informe4_colab/Prt04LabFisicaTerrazas/Data/PosTime.csv", header=FALSE)
View(PosTime)
summary(PosTime)
#Author: Leonel Zeballos Aldunate - Anahí Sanabria Ugarte
#Cod Siss: 202300536
#Carrea: Ingeniería en Informática
#Grupo: B6
#Fecha: 27/04/23
#
#Objetivo: Práctica 4
# Instalando y utilizando el paquete ggplot2
install.packages("ggplot2")
library(ggplot2)
# ##### IMPORTANDO DATOS #####
PosTime2 <- read.csv2("C:/Users/usser/Escritorio/Leonel/Asignaturas/FISICA_GRAL_LAB/Informes/Informe4_colab/Prt04LabFisicaTerrazas/Data/PosTime2.csv", header=FALSE)
View(PosTime2)
PresVol <- read.csv2("C:/Users/usser/Escritorio/Leonel/Asignaturas/FISICA_GRAL_LAB/Informes/Informe4_colab/Prt04LabFisicaTerrazas/Data/PresVol.csv", header=FALSE)
View(PresVol)
PosTime$V1
PosTime$V1[1]
PosTime$V1[2]
PosTime$V1[,1]
PosTime$V1[1,]
PosTime$V1[1, ]
PosTime$V1[1]
PosTime$V1[2]
PosTime$V1[]
PosTime$V1[2]
PosTime$V1[2, []]
PosTime$V1[2,
PosTime$V1[2,]
exit
PosTime$V1[2,]
PosTime$V1[, 2]
PosTime$V1
PosTime
PosTime[1,]
PosTime[, 1]
PosTime[, 2]
PosTime[1, 1]
plot(x = PosTime$V1, y = PosTime$V2)
plot(x = PosTime$V1)
PosTime$V1[1]
PosTime$V1[1,]
PosTime[1,]
PosTime[,1]
plot(x = PosTime[,1])
plot(x = PosTime[,1])
